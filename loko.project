{
  "name": "loko-cleaner",
  "id": "loko-cleaner",
  "description": "",
  "created_on": "29/09/2022, 12:59:50",
  "last_modify": "18/10/2022, 08:32:31",
  "graphs": {
    "main": {
      "nodes": [
        {
          "id": "4c7881e1-c5b5-4de7-968e-36e2ceee6263",
          "position": {
            "x": 441,
            "y": 148.12944943670388
          },
          "type": "custom",
          "dragHandle": "#nodeHandle",
          "sourcePosition": "right",
          "targetPosition": "left",
          "width": 150,
          "height": 104,
          "selected": false,
          "dragging": false,
          "data": {
            "name": "Trigger",
            "events": null,
            "description": "### Description\nThe TRIGGER component is used to start streams.\n\n### Output\nThe parameter Type can be set as a **String** or an **Object**. The parameter Value, on the other hand, defines the actual output of the component.",
            "inputs": [],
            "outputs": [
              {
                "id": "output",
                "label": "output"
              }
            ],
            "configured": true,
            "options": {
              "group": "Common",
              "args": [
                {
                  "name": "comment",
                  "type": "area",
                  "label": "Node comment",
                  "helper": "Use it to explain the usage of this node"
                },
                {
                  "name": "alias",
                  "type": "text",
                  "label": "Name",
                  "helper": "Use this name as an alias"
                },
                {
                  "name": "debug",
                  "type": "boolean",
                  "label": "Debug to Console",
                  "divider": true
                },
                {
                  "name": "type",
                  "type": "select",
                  "description": "The type of data",
                  "label": "Type",
                  "validation": {
                    "required": "Required field"
                  },
                  "fragment": null,
                  "advanced": false,
                  "options": [
                    "String",
                    "Object"
                  ],
                  "value": null
                },
                {
                  "name": "value",
                  "type": "dynamic",
                  "dynamicType": {
                    "String": "area",
                    "Object": "code"
                  },
                  "parent": "type",
                  "label": "Value",
                  "validation": {
                    "required": "Required field"
                  }
                }
              ],
              "click": "Send message",
              "icon": "RiPlayFill",
              "values": {
                "comment": "",
                "alias": "JSON data",
                "debug": true,
                "type": "Object",
                "value": "[\n        {\n            \"Company\":\"company1\",\n            \"Person\":{\n                \"FirstName\":\"mario\",\n                \"LastName\":\"rossi\"\n            }\n        },\n        {\n            \"Company\":\"company3\",\n            \"Person\":{\n                \"FirstName\":\"giuseppe\",\n                \"LastName\":\"verdi\"\n            }\n        },\n        {\n            \"Company\":\"company2\",\n            \"Person\":{\n                \"FirstName\":\"mario\",\n                \"LastName\":\"bianchi\"\n            }\n        }\n    ]"
              }
            },
            "locked": null
          },
          "selectable": true,
          "draggable": true,
          "positionAbsolute": {
            "x": 441,
            "y": 148.12944943670388
          },
          "__class__": "Node"
        },
        {
          "id": "83e28155-7254-460e-8ace-3d1dbd502bbd",
          "position": {
            "x": 441,
            "y": 277.1294494367039
          },
          "type": "custom",
          "dragHandle": "#nodeHandle",
          "sourcePosition": "right",
          "targetPosition": "left",
          "width": 150,
          "height": 104,
          "selected": false,
          "dragging": false,
          "data": {
            "name": "Trigger",
            "events": null,
            "description": "### Description\nThe TRIGGER component is used to start streams.\n\n### Output\nThe parameter Type can be set as a **String** or an **Object**. The parameter Value, on the other hand, defines the actual output of the component.",
            "inputs": [],
            "outputs": [
              {
                "id": "output",
                "label": "output"
              }
            ],
            "configured": true,
            "options": {
              "group": "Common",
              "args": [
                {
                  "name": "comment",
                  "type": "area",
                  "label": "Node comment",
                  "helper": "Use it to explain the usage of this node"
                },
                {
                  "name": "alias",
                  "type": "text",
                  "label": "Name",
                  "helper": "Use this name as an alias"
                },
                {
                  "name": "debug",
                  "type": "boolean",
                  "label": "Debug to Console",
                  "divider": true
                },
                {
                  "name": "type",
                  "type": "select",
                  "description": "The type of data",
                  "label": "Type",
                  "validation": {
                    "required": "Required field"
                  },
                  "fragment": null,
                  "advanced": false,
                  "options": [
                    "String",
                    "Object"
                  ],
                  "value": null
                },
                {
                  "name": "value",
                  "type": "dynamic",
                  "dynamicType": {
                    "String": "area",
                    "Object": "code"
                  },
                  "parent": "type",
                  "label": "Value",
                  "validation": {
                    "required": "Required field"
                  }
                }
              ],
              "click": "Send message",
              "icon": "RiPlayFill",
              "values": {
                "comment": "",
                "alias": "List",
                "debug": true,
                "type": "Object",
                "value": "['gfg', 1, 2, 'is', 'best', 'best', 1,1,1, None, \"\"]"
              }
            },
            "locked": null
          },
          "selectable": true,
          "draggable": true,
          "positionAbsolute": {
            "x": 441,
            "y": 277.1294494367039
          },
          "__class__": "Node"
        },
        {
          "id": "dacaf5af-f11f-4d1f-a4d2-b66b2cefe8fc",
          "position": {
            "x": 444,
            "y": 408.2973967099941
          },
          "type": "custom",
          "dragHandle": "#nodeHandle",
          "sourcePosition": "right",
          "targetPosition": "left",
          "width": 150,
          "height": 88,
          "selected": false,
          "dragging": false,
          "data": {
            "name": "CSV Reader",
            "events": null,
            "description": "### Description\nThe CSV READER component allows reading files in csv format. \n\nYou have the possibility to set a separator using the **Separator** parameter. The **Infer types** parameter allows the automatic transformation of the type of non-textual fields.\n\n### Input\nThe input required by this component is the file path in PosixPath format. However, the file path can also be defined when the component is created, in which case no input is required.\n\n### Output\nThe submitted file is returned row by row, where each row is represented by a dictionary that has the column names as keys.",
            "inputs": [
              {
                "id": "input",
                "label": "input"
              }
            ],
            "outputs": [
              {
                "id": "output",
                "label": "output"
              }
            ],
            "configured": true,
            "options": {
              "group": "Inputs",
              "args": [
                {
                  "name": "comment",
                  "type": "area",
                  "label": "Node comment",
                  "helper": "Use it to explain the usage of this node"
                },
                {
                  "name": "alias",
                  "type": "text",
                  "label": "Name",
                  "helper": "Use this name as an alias"
                },
                {
                  "name": "debug",
                  "type": "boolean",
                  "label": "Debug to Console",
                  "divider": true
                },
                {
                  "name": "value",
                  "type": "files",
                  "label": "File",
                  "fragment": "files",
                  "helper": "choose a file or read input"
                },
                {
                  "name": "separator",
                  "type": "text",
                  "label": "Separator"
                },
                {
                  "name": "df",
                  "type": "boolean",
                  "label": "Dask Dataframe"
                },
                {
                  "name": "infer_type",
                  "type": "boolean",
                  "label": "Infer types"
                },
                {
                  "name": "propagate",
                  "type": "boolean",
                  "label": "Flush at the end"
                }
              ],
              "click": "Send file",
              "icon": "RiFileChart2Fill",
              "values": {
                "comment": "",
                "alias": "",
                "debug": true,
                "separator": ",",
                "df": false,
                "infer_type": true,
                "propagate": true,
                "value": {
                  "name": "example.csv",
                  "path": "data/example.csv",
                  "parent": "data",
                  "isDir": false,
                  "hidden": false
                }
              }
            },
            "locked": null
          },
          "selectable": true,
          "draggable": true,
          "positionAbsolute": {
            "x": 444,
            "y": 408.2973967099941
          },
          "__class__": "Node"
        },
        {
          "id": "fd0bb830-214e-4d5a-9906-c578f09faa30",
          "position": {
            "x": 753,
            "y": 417.4460950649911
          },
          "type": "custom",
          "dragHandle": "#nodeHandle",
          "sourcePosition": "right",
          "targetPosition": "left",
          "width": 150,
          "height": 56,
          "selected": false,
          "dragging": false,
          "data": {
            "name": "Cleaner",
            "events": null,
            "description": "\n### Description\nCLEANER is the Loko AI component which allows to clean input data by removing duplicates from a JSON objects list or by replacing None or empty values with a specified non-empty value\n### Configuration\nThe switch ***Output as a list*** allows user to output cleaned data inside a single list, instead of iterating through each output value.\nUsers can decide whether clean duplicates or replace None/empty values or both with the corresponding switches.\nIf ***Remove Duplicates*** is switched on and input data is a JSON objects list, users can specify a discriminating key to decide wheter there is a duplicate or not, users can also ignore \"missing key\" errors by toggling the ***Ignore error*** switch.\nIf ***Replace None or empty values*** is switched on, users can specify a custom value. This value is used to fill None or empty values of the input data.\n\n### Input\nA list of JSON objects or a list of heterogeneous and non-heterogeneous values\n\n### Output\nSame as input but without duplicates or with None/empty values filled with the custom value \n",
            "inputs": [
              {
                "id": "json_input",
                "label": "JSON Input",
                "service": "clean_input",
                "to": "cleaned_output"
              }
            ],
            "outputs": [
              {
                "id": "cleaned_output",
                "label": "Cleaned Output"
              }
            ],
            "configured": true,
            "options": {
              "group": "Custom",
              "args": [
                {
                  "name": "comment",
                  "type": "area",
                  "label": "Node comment",
                  "helper": "Use it to explain the usage of this node"
                },
                {
                  "name": "alias",
                  "type": "text",
                  "label": "Name",
                  "helper": "Use this name as an alias"
                },
                {
                  "name": "debug",
                  "type": "boolean",
                  "label": "Debug to Console",
                  "divider": true
                },
                {
                  "name": "output_as_a_list",
                  "type": "boolean",
                  "label": "Output as a list",
                  "helper": "",
                  "group": "",
                  "value": null,
                  "description": "The output will be a list containing all the input elements",
                  "validation": null
                },
                {
                  "name": "remove_duplicates",
                  "type": "boolean",
                  "label": "Remove Duplicates",
                  "helper": "",
                  "group": "",
                  "value": null,
                  "description": "Remove duplicates from a list of JSON objects or a list",
                  "validation": null
                },
                {
                  "name": "key",
                  "type": "dynamic",
                  "label": "Key",
                  "helper": "",
                  "group": "",
                  "value": null,
                  "description": "The specified key will be used to check for duplicates in a list of JSON objects",
                  "validation": null,
                  "parent": "remove_duplicates",
                  "condition": "{parent}===true",
                  "dynamicType": "text",
                  "options": null
                },
                {
                  "name": "ignore_err",
                  "type": "dynamic",
                  "label": "Ignor Error",
                  "helper": "",
                  "group": "",
                  "value": null,
                  "description": "Ignore missing key errors",
                  "validation": null,
                  "parent": "remove_duplicates",
                  "condition": "{parent}===true",
                  "dynamicType": "boolean",
                  "options": null
                },
                {
                  "name": "replace_null",
                  "type": "boolean",
                  "label": "Replace None or empty values",
                  "helper": "",
                  "group": "",
                  "value": null,
                  "description": "Remove None or Empty values from JSON objects or a list",
                  "validation": null
                },
                {
                  "name": "replacing_text",
                  "type": "dynamic",
                  "label": "Replacing Text",
                  "helper": "",
                  "group": "",
                  "value": null,
                  "description": "Empty or None values will be replaced by this text",
                  "validation": {
                    "required": "Required field"
                  },
                  "parent": "replace_null",
                  "condition": "{parent}===true",
                  "dynamicType": "text",
                  "options": null
                }
              ],
              "click": null,
              "icon": "RiBrush2Fill",
              "values": {
                "comment": "",
                "alias": "Remove empty values",
                "debug": true,
                "output_as_a_list": true,
                "remove_duplicates": false,
                "replace_null": true,
                "replacing_text": "Hello! I'm an empty value replaced by this text"
              }
            },
            "locked": null
          },
          "selectable": true,
          "draggable": true,
          "positionAbsolute": {
            "x": 753,
            "y": 417.4460950649911
          },
          "__class__": "Node"
        },
        {
          "id": "2b97b52e-fb57-4a39-990c-d0cd8ad02d1c",
          "position": {
            "x": 700.7765420849732,
            "y": 217.8707460277858
          },
          "type": "custom",
          "dragHandle": "#nodeHandle",
          "sourcePosition": "right",
          "targetPosition": "left",
          "width": 206,
          "height": 72,
          "selected": false,
          "dragging": false,
          "data": {
            "name": "Cleaner",
            "events": null,
            "description": "\n### Description\nCLEANER is the Loko AI component which allows to clean input data by removing duplicates from a JSON objects list or by replacing None or empty values with a specified non-empty value\n### Configuration\nThe switch ***Output as a list*** allows user to output cleaned data inside a single list, instead of iterating through each output value.\nUsers can decide whether clean duplicates or replace None/empty values or both with the corresponding switches.\nIf ***Remove Duplicates*** is switched on and input data is a JSON objects list, users can specify a discriminating key to decide wheter there is a duplicate or not, users can also ignore \"missing key\" errors by toggling the ***Ignore error*** switch.\nIf ***Replace None or empty values*** is switched on, users can specify a custom value. This value is used to fill None or empty values of the input data.\n\n### Input\nA list of JSON objects or a list of heterogeneous and non-heterogeneous values\n\n### Output\nSame as input but without duplicates or with None/empty values filled with the custom value \n",
            "inputs": [
              {
                "id": "json_input",
                "label": "JSON Input",
                "service": "clean_input",
                "to": "cleaned_output"
              }
            ],
            "outputs": [
              {
                "id": "cleaned_output",
                "label": "Cleaned Output"
              }
            ],
            "configured": true,
            "options": {
              "group": "Custom",
              "args": [
                {
                  "name": "comment",
                  "type": "area",
                  "label": "Node comment",
                  "helper": "Use it to explain the usage of this node"
                },
                {
                  "name": "alias",
                  "type": "text",
                  "label": "Name",
                  "helper": "Use this name as an alias"
                },
                {
                  "name": "debug",
                  "type": "boolean",
                  "label": "Debug to Console",
                  "divider": true
                },
                {
                  "name": "output_as_a_list",
                  "type": "boolean",
                  "label": "Output as a list",
                  "helper": "",
                  "group": "",
                  "value": null,
                  "description": "The output will be a list containing all the input elements",
                  "validation": null
                },
                {
                  "name": "remove_duplicates",
                  "type": "boolean",
                  "label": "Remove Duplicates",
                  "helper": "",
                  "group": "",
                  "value": null,
                  "description": "Remove duplicates from a list of JSON objects or a list",
                  "validation": null
                },
                {
                  "name": "key",
                  "type": "dynamic",
                  "label": "Key",
                  "helper": "",
                  "group": "",
                  "value": null,
                  "description": "The specified key will be used to check for duplicates in a list of JSON objects",
                  "validation": null,
                  "parent": "remove_duplicates",
                  "condition": "{parent}===true",
                  "dynamicType": "text",
                  "options": null
                },
                {
                  "name": "ignore_err",
                  "type": "dynamic",
                  "label": "Ignor Error",
                  "helper": "",
                  "group": "",
                  "value": null,
                  "description": "Ignore missing key errors",
                  "validation": null,
                  "parent": "remove_duplicates",
                  "condition": "{parent}===true",
                  "dynamicType": "boolean",
                  "options": null
                },
                {
                  "name": "replace_null",
                  "type": "boolean",
                  "label": "Replace None or empty values",
                  "helper": "",
                  "group": "",
                  "value": null,
                  "description": "Remove None or Empty values from JSON objects or a list",
                  "validation": null
                },
                {
                  "name": "replacing_text",
                  "type": "dynamic",
                  "label": "Replacing Text",
                  "helper": "",
                  "group": "",
                  "value": null,
                  "description": "Empty or None values will be replaced by this text",
                  "validation": {
                    "required": "Required field"
                  },
                  "parent": "replace_null",
                  "condition": "{parent}===true",
                  "dynamicType": "text",
                  "options": null
                }
              ],
              "click": null,
              "icon": "RiBrush2Fill",
              "values": {
                "comment": "",
                "alias": "Remove duplicates and empty values",
                "debug": true,
                "output_as_a_list": true,
                "remove_duplicates": true,
                "replace_null": true,
                "key": "Person.FirstName",
                "ignore_err": true,
                "replacing_text": "Hello! I'm an empty value replaced by this text"
              }
            },
            "locked": null
          },
          "selectable": true,
          "draggable": true,
          "positionAbsolute": {
            "x": 700.7765420849732,
            "y": 217.8707460277858
          },
          "__class__": "Node"
        }
      ],
      "edges": [
        {
          "id": "reactflow__edge-dacaf5af-f11f-4d1f-a4d2-b66b2cefe8fcoutput-fd0bb830-214e-4d5a-9906-c578f09faa30json_input",
          "source": "dacaf5af-f11f-4d1f-a4d2-b66b2cefe8fc",
          "sourceHandle": "output",
          "target": "fd0bb830-214e-4d5a-9906-c578f09faa30",
          "targetHandle": "json_input",
          "data": {
            "startColor": "#F8637A",
            "stopColor": "#888"
          },
          "selected": false,
          "dragging": false,
          "__class__": "Edge"
        },
        {
          "id": "reactflow__edge-4c7881e1-c5b5-4de7-968e-36e2ceee6263output-2b97b52e-fb57-4a39-990c-d0cd8ad02d1cjson_input",
          "source": "4c7881e1-c5b5-4de7-968e-36e2ceee6263",
          "sourceHandle": "output",
          "target": "2b97b52e-fb57-4a39-990c-d0cd8ad02d1c",
          "targetHandle": "json_input",
          "data": {
            "startColor": "#D770AD",
            "stopColor": "#888"
          },
          "selected": false,
          "dragging": false,
          "__class__": "Edge"
        },
        {
          "id": "reactflow__edge-83e28155-7254-460e-8ace-3d1dbd502bbdoutput-2b97b52e-fb57-4a39-990c-d0cd8ad02d1cjson_input",
          "source": "83e28155-7254-460e-8ace-3d1dbd502bbd",
          "sourceHandle": "output",
          "target": "2b97b52e-fb57-4a39-990c-d0cd8ad02d1c",
          "targetHandle": "json_input",
          "data": {
            "startColor": "#D770AD",
            "stopColor": "#888"
          },
          "selected": false,
          "dragging": false,
          "__class__": "Edge"
        }
      ],
      "__class__": "Graph"
    }
  },
  "open": [
    "main"
  ],
  "active": "main",
  "version": "1.0.0",
  "__class__": "Project"
}